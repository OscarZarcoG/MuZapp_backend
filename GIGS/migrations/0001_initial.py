# Generated by Django 5.2 on 2025-08-25 06:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Catering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('peticion_grupo', models.TextField(verbose_name='Petición del grupo')),
            ],
            options={
                'verbose_name': 'Catering',
                'verbose_name_plural': 'Caterings',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('nombre', models.CharField(help_text='Nombre del cliente', max_length=255, verbose_name='Nombre')),
                ('apellidos', models.CharField(blank=True, help_text='Apellidos del cliente', max_length=255, verbose_name='Apellidos')),
                ('telefono', models.CharField(help_text='Número de teléfono del cliente', max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, help_text='Correo electrónico del cliente', max_length=254, verbose_name='Email')),
                ('direccion', models.CharField(blank=True, help_text='Dirección completa del cliente', max_length=500, verbose_name='Dirección')),
                ('ciudad', models.CharField(blank=True, help_text='Ciudad del cliente', max_length=100, verbose_name='Ciudad')),
                ('codigo_postal', models.CharField(blank=True, help_text='Código postal del cliente', max_length=10, verbose_name='Código Postal')),
                ('tipo_cliente', models.CharField(choices=[('particular', 'Particular'), ('empresa', 'Empresa'), ('organizacion', 'Organización')], default='particular', help_text='Tipo de cliente: particular, empresa u organización', max_length=20, verbose_name='Tipo de Cliente')),
                ('empresa', models.CharField(blank=True, help_text='Nombre de la empresa u organización (si aplica)', max_length=255, verbose_name='Empresa/Organización')),
                ('nif_cif', models.CharField(blank=True, help_text='Número de identificación fiscal (si aplica)', max_length=20, verbose_name='NIF/CIF')),
                ('observaciones', models.TextField(blank=True, help_text='Notas adicionales sobre el cliente', verbose_name='Observaciones')),
                ('redes_sociales', models.URLField(blank=True, help_text='Enlaces a redes sociales del cliente', verbose_name='Redes sociales')),
                ('frecuencia', models.CharField(choices=[('frecuente', 'Frecuente'), ('regular', 'Regular'), ('ocasional', 'Ocasional')], default='ocasional', help_text='Frecuencia de contratación del cliente', max_length=20, verbose_name='Frecuencia')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nombre', 'apellidos'],
            },
        ),
        migrations.CreateModel(
            name='Equipo_Audio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('nombre', models.CharField(default='Equipo sin nombre', max_length=200, verbose_name='Nombre del Equipo')),
                ('tipo', models.CharField(choices=[('altavoces', 'Altavoces'), ('microfonos', 'Micrófonos'), ('mezcladores', 'Mezcladores'), ('amplificadores', 'Amplificadores'), ('instrumentos', 'Instrumentos'), ('iluminacion', 'Iluminación'), ('cables', 'Cables'), ('soportes', 'Soportes'), ('otros', 'Otros')], default='altavoces', max_length=50, verbose_name='Tipo de Equipo')),
                ('marca', models.CharField(blank=True, max_length=200, verbose_name='Marca')),
                ('modelo', models.CharField(blank=True, max_length=200, verbose_name='Modelo')),
                ('numero_serie', models.CharField(blank=True, max_length=200, verbose_name='Número de Serie')),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('en_uso', 'En Uso'), ('mantenimiento', 'Mantenimiento'), ('averiado', 'Averiado'), ('vendido', 'Vendido')], default='disponible', max_length=50, verbose_name='Estado')),
                ('precio_compra', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Precio de Compra')),
                ('fecha_compra', models.DateField(blank=True, null=True, verbose_name='Fecha de Compra')),
                ('garantia_hasta', models.DateField(blank=True, null=True, verbose_name='Garantía Hasta')),
                ('ubicacion', models.CharField(blank=True, max_length=200, verbose_name='Ubicación')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('numero_bocinas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número de bocinas')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='equipos_audio/', verbose_name='Imagen del equipo')),
            ],
            options={
                'verbose_name': 'Equipo de audio',
                'verbose_name_plural': 'Equipos de audio',
                'ordering': ['nombre', 'marca', 'modelo'],
            },
        ),
        migrations.CreateModel(
            name='Fotos_Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('nombre_foto', models.CharField(max_length=255, verbose_name='Nombre de la foto')),
                ('fecha_foto', models.DateField(verbose_name='Fecha de la foto')),
                ('foto', models.ImageField(upload_to='fotos_evento/', verbose_name='Foto')),
            ],
            options={
                'verbose_name': 'Foto del evento',
                'verbose_name_plural': 'Fotos del evento',
            },
        ),
        migrations.CreateModel(
            name='Peticion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('nombre_cancion', models.CharField(max_length=255, verbose_name='Nombre de la canción')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Link')),
            ],
            options={
                'verbose_name': 'Petición',
                'verbose_name_plural': 'Peticiones',
            },
        ),
        migrations.CreateModel(
            name='Repertorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('nombre_cancion', models.CharField(max_length=255, verbose_name='Nombre de la canción')),
            ],
            options={
                'verbose_name': 'Repertorio',
                'verbose_name_plural': 'Repertorios',
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('numero_contrato', models.CharField(blank=True, editable=False, max_length=20, unique=True, verbose_name='Número de contrato')),
                ('estado_evento', models.CharField(choices=[('pending', 'Pendiente'), ('confirmed', 'Confirmado'), ('in_progress', 'En progreso'), ('completed', 'Completado'), ('cancelled', 'Cancelado')], default='pending', max_length=255, verbose_name='Estado del evento')),
                ('titulo', models.CharField(default='Evento', max_length=255, verbose_name='Título del evento')),
                ('tipo_evento', models.CharField(choices=[('birthday', 'Cumpleaños'), ('wedding', 'Boda'), ('quinceañera', 'XV Años'), ('baptism', 'Bautizo'), ('communion', 'Primera Comunión'), ('graduation', 'Graduación'), ('anniversary', 'Aniversario'), ('corporate', 'Evento Corporativo'), ('baby_shower', 'Baby Shower'), ('bridal_shower', 'Despedida de Soltera'), ('christmas', 'Navidad'), ('new_year', 'Año Nuevo'), ('other', 'Otro')], default='birthday', max_length=255, verbose_name='Tipo de evento')),
                ('nombre_festejado', models.CharField(default='Festejado', max_length=255, verbose_name='Nombre del festejado')),
                ('notas', models.TextField(blank=True, default='Notas', help_text='¿Necesita alguna nota especial?', verbose_name='Notas')),
                ('fecha_evento', models.DateField(db_index=True, verbose_name='Fecha del evento')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de inicio')),
                ('hora_final', models.TimeField(verbose_name='Hora de finalización')),
                ('tiempo_total', models.PositiveIntegerField(blank=True, editable=False, help_text='Se calcula automáticamente', null=True, verbose_name='Horas totales del evento')),
                ('oportunidades_descanso', models.PositiveIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True, verbose_name='Oportunidades de descanso')),
                ('tiempo_descanso', models.PositiveIntegerField(blank=True, choices=[(10, '10 minutos'), (15, '15 minutos'), (20, '20 minutos'), (30, '30 minutos'), (45, '45 minutos'), (60, '1 hora')], null=True, verbose_name='Tiempo de descanso')),
                ('descripcion_descanso', models.TextField(blank=True, default='Descripción', null=True, verbose_name='Descripción del descanso')),
                ('nombre_lugar', models.CharField(default='Lugar', max_length=255, verbose_name='Nombre del lugar')),
                ('descripcion_lugar', models.TextField(blank=True, default='Descripción', verbose_name='Descripción del lugar')),
                ('google_maps_url', models.URLField(verbose_name='URL Google Maps')),
                ('fotos_lugar', models.ImageField(blank=True, null=True, upload_to='lugar_fotos/', verbose_name='Fotos del lugar')),
                ('pago_total', models.DecimalField(decimal_places=2, default=0, help_text='Se calcula automáticamente', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total')),
                ('costo_hora', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Costo por hora')),
                ('pago_adelanto', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Adelanto')),
                ('pago_restante', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Restante')),
                ('porcentaje', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Porcentaje pagado')),
                ('costo_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Costo extra')),
                ('audiencia', models.IntegerField(choices=[(10, '10 personas'), (20, '20 personas'), (30, '30 personas'), (40, '40 personas'), (50, '50 personas'), (60, '60 personas'), (70, '70 personas'), (80, '80 personas'), (90, '90 personas'), (100, '100 personas'), (150, '150 personas'), (200, '200 personas'), (250, '250 personas'), (300, '300 personas')], default=10, verbose_name='Audiencia')),
                ('catering', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GIGS.catering', verbose_name='Catering')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GIGS.cliente', verbose_name='Cliente')),
                ('equipo_audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='GIGS.equipo_audio', verbose_name='Equipo de audio')),
                ('peticiones_cliente', models.ManyToManyField(blank=True, to='GIGS.peticion', verbose_name='Peticiones del cliente')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
                'ordering': ['-fecha_evento'],
            },
        ),
    ]
