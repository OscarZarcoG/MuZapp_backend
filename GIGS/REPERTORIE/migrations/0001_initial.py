# Generated by Django 5.2 on 2025-08-25 06:32

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Repertorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('nombre_cancion', models.CharField(help_text='Título de la canción', max_length=200, verbose_name='Nombre de la canción')),
                ('artista', models.CharField(help_text='Nombre del artista o banda', max_length=200, verbose_name='Artista')),
                ('genero', models.CharField(choices=[('pop', 'Pop'), ('rock', 'Rock'), ('jazz', 'Jazz'), ('blues', 'Blues'), ('country', 'Country'), ('folk', 'Folk'), ('reggae', 'Reggae'), ('hip_hop', 'Hip Hop'), ('electronic', 'Electrónica'), ('classical', 'Clásica'), ('latin', 'Latina'), ('salsa', 'Salsa'), ('merengue', 'Merengue'), ('bachata', 'Bachata'), ('cumbia', 'Cumbia'), ('vallenato', 'Vallenato'), ('ranchera', 'Ranchera'), ('mariachi', 'Mariachi'), ('bolero', 'Bolero'), ('tango', 'Tango'), ('bossa_nova', 'Bossa Nova'), ('reggaeton', 'Reggaetón'), ('trap', 'Trap'), ('funk', 'Funk'), ('soul', 'Soul'), ('r_and_b', 'R&B'), ('gospel', 'Gospel'), ('indie', 'Indie'), ('alternative', 'Alternativo'), ('punk', 'Punk'), ('metal', 'Metal'), ('disco', 'Disco'), ('house', 'House'), ('techno', 'Techno'), ('ambient', 'Ambient'), ('instrumental', 'Instrumental'), ('otros', 'Otros')], default='otros', help_text='Género musical de la canción', max_length=50, verbose_name='Género musical')),
                ('duracion', models.CharField(blank=True, help_text='Duración en formato MM:SS o HH:MM:SS', max_length=10, null=True, verbose_name='Duración')),
                ('duracion_segundos', models.PositiveIntegerField(blank=True, help_text='Duración total en segundos (calculado automáticamente)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7200)], verbose_name='Duración en segundos')),
                ('dificultad', models.CharField(choices=[('facil', 'Fácil'), ('intermedio', 'Intermedio'), ('dificil', 'Difícil'), ('experto', 'Experto')], default='intermedio', help_text='Nivel de dificultad para tocar la canción', max_length=20, verbose_name='Dificultad')),
                ('tonalidad', models.CharField(blank=True, help_text='Tonalidad de la canción (ej: C, Am, F#)', max_length=10, null=True, verbose_name='Tonalidad')),
                ('tempo', models.PositiveIntegerField(blank=True, help_text='Tempo en beats por minuto', null=True, validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(300)], verbose_name='Tempo (BPM)')),
                ('link', models.URLField(blank=True, help_text='Enlace a YouTube, Spotify, etc.', null=True, verbose_name='Enlace')),
                ('link_partitura', models.URLField(blank=True, help_text='Enlace a la partitura o acordes', null=True, verbose_name='Enlace a partitura')),
                ('notas', models.TextField(blank=True, help_text='Notas adicionales sobre la canción', null=True, verbose_name='Notas')),
                ('veces_tocada', models.PositiveIntegerField(default=0, help_text='Número de veces que se ha tocado esta canción', verbose_name='Veces tocada')),
                ('ultima_vez_tocada', models.DateTimeField(blank=True, help_text='Fecha de la última vez que se tocó', null=True, verbose_name='Última vez tocada')),
                ('etiquetas', models.CharField(blank=True, help_text='Etiquetas separadas por comas (ej: bailable, romántica, navideña)', max_length=500, null=True, verbose_name='Etiquetas')),
                ('es_favorita', models.BooleanField(default=False, help_text='Marcar como canción favorita', verbose_name='Es favorita')),
            ],
            options={
                'verbose_name': 'Canción del Repertorio',
                'verbose_name_plural': 'Repertorio Musical',
                'ordering': ['nombre_cancion', 'artista'],
                'indexes': [models.Index(fields=['nombre_cancion'], name='REPERTORIE__nombre__cd7e8c_idx'), models.Index(fields=['artista'], name='REPERTORIE__artista_48655a_idx'), models.Index(fields=['genero'], name='REPERTORIE__genero_27a1cc_idx'), models.Index(fields=['dificultad'], name='REPERTORIE__dificul_361be3_idx'), models.Index(fields=['es_favorita'], name='REPERTORIE__es_favo_4d7df8_idx'), models.Index(fields=['veces_tocada'], name='REPERTORIE__veces_t_4098f8_idx'), models.Index(fields=['created_at'], name='REPERTORIE__created_7f2d8e_idx')],
                'unique_together': {('nombre_cancion', 'artista')},
            },
        ),
    ]
