# Generated by Django 5.2 on 2025-08-25 06:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('CLIENTS', '0001_initial'),
        ('GIGS', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Indica si el registro se encuentra activo', verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Fecha y hora de creación del registro', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Fecha y hora de la ultima actualización del registro', verbose_name='Última actualización')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora de borrado del registro', null=True, verbose_name='Fecha de borrado')),
                ('nombre_cancion', models.CharField(help_text='Título de la canción solicitada', max_length=255, verbose_name='Nombre de la canción')),
                ('artista', models.CharField(blank=True, help_text='Nombre del artista o banda', max_length=255, verbose_name='Artista')),
                ('album', models.CharField(blank=True, help_text='Nombre del álbum', max_length=255, verbose_name='Álbum')),
                ('genero', models.CharField(blank=True, help_text='Género musical de la canción', max_length=100, verbose_name='Género musical')),
                ('link', models.URLField(blank=True, help_text='Enlace a YouTube, Spotify, etc.', null=True, validators=[django.core.validators.URLValidator()], verbose_name='Enlace')),
                ('link_partitura', models.URLField(blank=True, help_text='Enlace a la partitura o acordes', null=True, validators=[django.core.validators.URLValidator()], verbose_name='Enlace a partitura')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobada', 'Aprobada'), ('rechazada', 'Rechazada'), ('en_repertorio', 'En Repertorio')], default='pendiente', help_text='Estado actual de la petición', max_length=20, verbose_name='Estado')),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', help_text='Prioridad de la petición', max_length=20, verbose_name='Prioridad')),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True, help_text='Fecha en que se realizó la petición', verbose_name='Fecha de solicitud')),
                ('fecha_necesaria', models.DateField(blank=True, help_text='Fecha para cuando se necesita la canción', null=True, verbose_name='Fecha necesaria')),
                ('fecha_respuesta', models.DateTimeField(blank=True, help_text='Fecha en que se respondió a la petición', null=True, verbose_name='Fecha de respuesta')),
                ('notas_cliente', models.TextField(blank=True, help_text='Comentarios o notas adicionales del cliente', verbose_name='Notas del cliente')),
                ('notas_internas', models.TextField(blank=True, help_text='Notas internas para el músico/banda', verbose_name='Notas internas')),
                ('motivo_rechazo', models.TextField(blank=True, help_text='Razón por la cual se rechazó la petición', verbose_name='Motivo de rechazo')),
                ('dificultad_estimada', models.CharField(blank=True, choices=[('facil', 'Fácil'), ('intermedio', 'Intermedio'), ('dificil', 'Difícil'), ('muy_dificil', 'Muy Difícil')], help_text='Dificultad estimada para aprender la canción', max_length=20, verbose_name='Dificultad estimada')),
                ('tiempo_estimado_aprendizaje', models.PositiveIntegerField(blank=True, help_text='Horas estimadas para aprender la canción', null=True, verbose_name='Tiempo estimado (horas)')),
                ('cliente', models.ForeignKey(help_text='Cliente que solicita la canción', on_delete=django.db.models.deletion.CASCADE, to='CLIENTS.client', verbose_name='Cliente')),
                ('evento_relacionado', models.ForeignKey(blank=True, help_text='Contrato/evento para el cual se solicita la canción', null=True, on_delete=django.db.models.deletion.SET_NULL, to='GIGS.contrato', verbose_name='Evento relacionado')),
            ],
            options={
                'verbose_name': 'Petición de Cliente',
                'verbose_name_plural': 'Peticiones de Clientes',
                'ordering': ['-fecha_solicitud', '-prioridad'],
                'indexes': [models.Index(fields=['estado'], name='CLIENTS_REQ_estado_647027_idx'), models.Index(fields=['prioridad'], name='CLIENTS_REQ_priorid_d27bd9_idx'), models.Index(fields=['cliente'], name='CLIENTS_REQ_cliente_2e9e20_idx'), models.Index(fields=['fecha_solicitud'], name='CLIENTS_REQ_fecha_s_bffd1a_idx'), models.Index(fields=['fecha_necesaria'], name='CLIENTS_REQ_fecha_n_75d354_idx')],
            },
        ),
    ]
